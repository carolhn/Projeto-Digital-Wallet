{"ast":null,"code":"export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES'; // export const REQUEST = 'REQUEST';\n// export const SUCCESS = 'SUCCESS';\n// export const ERROR = 'ERROR';\n\nexport const actEmail = payload => ({\n  type: ACT_EMAIL,\n  payload\n});\nexport const actCurrencies = payload => ({\n  type: ACT_CURRENCIES,\n  payload\n}); // export const fetchApi = () => async (dispatch) => {\n//   const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//   const result = await response.json();\n//   delete result.USDT;\n//   const obj = Object.keys(result);\n//   dispatch(actCurrencies(obj));\n// };\n\nexport const request = () => ({\n  type: REQUEST\n});\nexport const success = payload => ({\n  type: SUCCESS,\n  payload\n});\nexport const actionError = payload => ({\n  type: ERROR,\n  payload\n}); // export const fetchApi = () => async (dispatch) => {\n//   dispatch(request);\n//   try {\n//     const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//     const data = await response.json();\n//     const dataResult = Object.keys(data).filter((e) => e !== 'USDT');\n//     dispatch(success(dataResult));\n//   } catch (error) {\n//     dispatch(actionError(error));\n//   }\n// };\n\nexport function fetchApi() {\n  return async dispatch => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await response.json();\n    const resultado = Object.keys(result).filter(e => e !== 'USDT');\n    return dispatch(actCurrencies(resultado));\n  };\n} //\n//\n//\n//\n//\n//\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer","map":{"version":3,"names":["ACT_EMAIL","ACT_CURRENCIES","actEmail","payload","type","actCurrencies","request","REQUEST","success","SUCCESS","actionError","ERROR","fetchApi","dispatch","response","fetch","result","json","resultado","Object","keys","filter","e"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\n// export const REQUEST = 'REQUEST';\n// export const SUCCESS = 'SUCCESS';\n// export const ERROR = 'ERROR';\n\nexport const actEmail = (payload) => ({ type: ACT_EMAIL, payload });\n\nexport const actCurrencies = (payload) => ({\n  type: ACT_CURRENCIES, payload });\n\n// export const fetchApi = () => async (dispatch) => {\n//   const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//   const result = await response.json();\n//   delete result.USDT;\n//   const obj = Object.keys(result);\n//   dispatch(actCurrencies(obj));\n// };\n\nexport const request = () => ({\n  type: REQUEST,\n});\n\nexport const success = (payload) => ({\n  type: SUCCESS,\n  payload,\n});\n\nexport const actionError = (payload) => ({\n  type: ERROR,\n  payload,\n});\n\n// export const fetchApi = () => async (dispatch) => {\n//   dispatch(request);\n//   try {\n//     const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//     const data = await response.json();\n//     const dataResult = Object.keys(data).filter((e) => e !== 'USDT');\n//     dispatch(success(dataResult));\n//   } catch (error) {\n//     dispatch(actionError(error));\n//   }\n// };\n\nexport function fetchApi() {\n  return async (dispatch) => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await response.json();\n    const resultado = Object.keys(result).filter((e) => e !== 'USDT');\n    return dispatch(actCurrencies(resultado));\n  };\n}\n\n//\n//\n//\n//\n//\n//\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CACP;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;EAAEC,IAAI,EAAEJ,SAAR;EAAmBG;AAAnB,CAAd,CAAjB;AAEP,OAAO,MAAME,aAAa,GAAIF,OAAD,KAAc;EACzCC,IAAI,EAAEH,cADmC;EACnBE;AADmB,CAAd,CAAtB,C,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,OAAO,GAAG,OAAO;EAC5BF,IAAI,EAAEG;AADsB,CAAP,CAAhB;AAIP,OAAO,MAAMC,OAAO,GAAIL,OAAD,KAAc;EACnCC,IAAI,EAAEK,OAD6B;EAEnCN;AAFmC,CAAd,CAAhB;AAKP,OAAO,MAAMO,WAAW,GAAIP,OAAD,KAAc;EACvCC,IAAI,EAAEO,KADiC;EAEvCR;AAFuC,CAAd,CAApB,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASS,QAAT,GAAoB;EACzB,OAAO,MAAOC,QAAP,IAAoB;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;IACA,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;IACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA4BC,CAAD,IAAOA,CAAC,KAAK,MAAxC,CAAlB;IACA,OAAOT,QAAQ,CAACR,aAAa,CAACa,SAAD,CAAd,CAAf;EACD,CALD;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}