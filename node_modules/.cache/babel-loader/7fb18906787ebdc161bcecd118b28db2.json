{"ast":null,"code":"import { ACT_CURRENCIES } from '../actions';\nconst INITIAL_STATE = {\n  currencies: []\n};\n\nfunction wallet() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ACT_CURRENCIES:\n      return { ...state,\n        currencies: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default wallet;","map":{"version":3,"names":["ACT_CURRENCIES","INITIAL_STATE","currencies","wallet","state","action","type","payload"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["import { ACT_CURRENCIES } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ACT_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,YAA/B;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE;AADQ,CAAtB;;AAIA,SAASC,MAAT,GAA+C;EAAA,IAA/BC,KAA+B,uEAAvBH,aAAuB;EAAA,IAARI,MAAQ;;EAC7C,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKN,cAAL;MACE,OAAO,EACL,GAAGI,KADE;QAELF,UAAU,EAAEG,MAAM,CAACE;MAFd,CAAP;;IAIF;MACE,OAAOH,KAAP;EAPF;AASD;;AAAA;AAED,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}