{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { ACT_CURRENCIES, ACT_ERRO } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  start: false\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ACT_CURRENCIES:\n      return { ...state,\n        currencies: action.currencies,\n        start: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"names":["ACT_CURRENCIES","ACT_ERRO","INITIAL_STATE","currencies","start","wallet","state","action","type"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { ACT_CURRENCIES, ACT_ERRO } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  start: false,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ACT_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.currencies,\n      start: true,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,QAAzB,QAAyC,YAAzC;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,KAAK,EAAE;AAFa,CAAtB;;AAKA,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BJ,aAA0B;EAAA,IAAXK,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKR,cAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELH,UAAU,EAAEI,MAAM,CAACJ,UAFd;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF;MACE,OAAOE,KAAP;EARF;AAUD,CAXD;;AAaA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}