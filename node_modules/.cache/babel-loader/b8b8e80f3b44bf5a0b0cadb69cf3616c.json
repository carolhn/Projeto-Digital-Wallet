{"ast":null,"code":"export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\nexport const actEmail = payload => ({\n  type: ACT_EMAIL,\n  payload\n});\nexport const actCurrencies = payload => ({\n  type: ACT_CURRENCIES,\n  payload\n}); // export const fetchApi = () => async (dispatch) => {\n//   const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//   const result = await response.json();\n//   delete result.USDT;\n//   const obj = Object.keys(result);\n//   dispatch(actCurrencies(obj));\n// };\n\nexport function fetchApi() {\n  return async dispatch => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await response.json();\n    delete result.USDT;\n    console.log(result.keys); // const obj = Object.keys(result);\n\n    return dispatch(actCurrencies(result));\n  };\n} // 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer","map":{"version":3,"names":["ACT_EMAIL","ACT_CURRENCIES","actEmail","payload","type","actCurrencies","fetchApi","dispatch","response","fetch","result","json","USDT","console","log","keys"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\n\nexport const actEmail = (payload) => ({ type: ACT_EMAIL, payload });\n\nexport const actCurrencies = (payload) => ({\n  type: ACT_CURRENCIES, payload });\n\n// export const fetchApi = () => async (dispatch) => {\n//   const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//   const result = await response.json();\n//   delete result.USDT;\n//   const obj = Object.keys(result);\n//   dispatch(actCurrencies(obj));\n// };\n\nexport function fetchApi() {\n  return async (dispatch) => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await response.json();\n    delete result.USDT;\n    console.log(result.keys);\n    // const obj = Object.keys(result);\n    return dispatch(actCurrencies(result));\n  };\n}\n\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;EAAEC,IAAI,EAAEJ,SAAR;EAAmBG;AAAnB,CAAd,CAAjB;AAEP,OAAO,MAAME,aAAa,GAAIF,OAAD,KAAc;EACzCC,IAAI,EAAEH,cADmC;EACnBE;AADmB,CAAd,CAAtB,C,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,QAAT,GAAoB;EACzB,OAAO,MAAOC,QAAP,IAAoB;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;IACA,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;IACA,OAAOD,MAAM,CAACE,IAAd;IACAC,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,IAAnB,EAJyB,CAKzB;;IACA,OAAOR,QAAQ,CAACF,aAAa,CAACK,MAAD,CAAd,CAAf;EACD,CAPD;AAQD,C,CAED;AAEA;AAEA"},"metadata":{},"sourceType":"module"}