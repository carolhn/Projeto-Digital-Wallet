{"ast":null,"code":"export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\nexport const actEmail = payload => ({\n  type: ACT_EMAIL,\n  payload\n});\nexport const actCurrencies = payload => ({\n  type: ACT_CURRENCIES,\n  payload\n}); // export const fetchApi = () => async (dispatch) => {\n//   const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//   const result = await response.json();\n//   delete result.USDT;\n//   const obj = Object.keys(result);\n//   dispatch(actCurrencies(obj));\n// };\n\nexport function fetchApi() {\n  return async dispatch => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await response.json();\n    const resultado = Object.keys(result).filter(e => e !== 'USDT');\n    return dispatch(actCurrencies(resultado));\n  };\n}\n\nconst currencyApi = async () => {\n  const endPoint = 'https://economia.awesomeapi.com.br/json/all';\n  const response = await fetch(endPoint);\n  const data = response.json();\n  return data;\n};\n\nexport default currencyApi; // 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer","map":{"version":3,"names":["ACT_EMAIL","ACT_CURRENCIES","actEmail","payload","type","actCurrencies","fetchApi","dispatch","response","fetch","result","json","resultado","Object","keys","filter","e","currencyApi","endPoint","data"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\n\nexport const actEmail = (payload) => ({ type: ACT_EMAIL, payload });\n\nexport const actCurrencies = (payload) => ({\n  type: ACT_CURRENCIES, payload });\n\n// export const fetchApi = () => async (dispatch) => {\n//   const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//   const result = await response.json();\n//   delete result.USDT;\n//   const obj = Object.keys(result);\n//   dispatch(actCurrencies(obj));\n// };\n\nexport function fetchApi() {\n  return async (dispatch) => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await response.json();\n    const resultado = Object.keys(result).filter((e) => e !== 'USDT');\n    return dispatch(actCurrencies(resultado));\n  };\n}\n\nconst currencyApi = async () => {\n  const endPoint = 'https://economia.awesomeapi.com.br/json/all';\n  const response = await fetch(endPoint);\n  const data = response.json();\n  return data;\n};\n\nexport default currencyApi;\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;EAAEC,IAAI,EAAEJ,SAAR;EAAmBG;AAAnB,CAAd,CAAjB;AAEP,OAAO,MAAME,aAAa,GAAIF,OAAD,KAAc;EACzCC,IAAI,EAAEH,cADmC;EACnBE;AADmB,CAAd,CAAtB,C,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,QAAT,GAAoB;EACzB,OAAO,MAAOC,QAAP,IAAoB;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;IACA,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;IACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA4BC,CAAD,IAAOA,CAAC,KAAK,MAAxC,CAAlB;IACA,OAAOT,QAAQ,CAACF,aAAa,CAACO,SAAD,CAAd,CAAf;EACD,CALD;AAMD;;AAED,MAAMK,WAAW,GAAG,YAAY;EAC9B,MAAMC,QAAQ,GAAG,6CAAjB;EACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACS,QAAD,CAA5B;EACA,MAAMC,IAAI,GAAGX,QAAQ,CAACG,IAAT,EAAb;EACA,OAAOQ,IAAP;AACD,CALD;;AAOA,eAAeF,WAAf,C,CACA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}