{"ast":null,"code":"export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\nexport const actEmail = payload => ({\n  type: ACT_EMAIL,\n  payload\n});\nexport const actCurrencies = currencies => ({\n  type: ACTION_CURRENCIES,\n  payload: currencies\n});\nexport const fetchApi = () => async dispatch => {\n  const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const currenciesObj = await response.json();\n  const currencies = Object.keys(currenciesObj).filter(currency => currency !== 'USDT');\n  dispatch(actCurrencies(currencies));\n}; // 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer","map":{"version":3,"names":["ACT_EMAIL","ACT_CURRENCIES","actEmail","payload","type","actCurrencies","currencies","ACTION_CURRENCIES","fetchApi","dispatch","response","fetch","currenciesObj","json","Object","keys","filter","currency"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\n\nexport const actEmail = (payload) => ({ type: ACT_EMAIL, payload });\n\nexport const actCurrencies = (currencies) => ({\n  type: ACTION_CURRENCIES, payload: currencies });\n\nexport const fetchApi = () => async (dispatch) => {\n  const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const currenciesObj = await response.json();\n  const currencies = Object\n    .keys(currenciesObj)\n    .filter((currency) => currency !== 'USDT');\n\n  dispatch(actCurrencies(currencies));\n};\n\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;EAAEC,IAAI,EAAEJ,SAAR;EAAmBG;AAAnB,CAAd,CAAjB;AAEP,OAAO,MAAME,aAAa,GAAIC,UAAD,KAAiB;EAC5CF,IAAI,EAAEG,iBADsC;EACnBJ,OAAO,EAAEG;AADU,CAAjB,CAAtB;AAGP,OAAO,MAAME,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;EACA,MAAMC,aAAa,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA5B;EACA,MAAMP,UAAU,GAAGQ,MAAM,CACtBC,IADgB,CACXH,aADW,EAEhBI,MAFgB,CAERC,QAAD,IAAcA,QAAQ,KAAK,MAFlB,CAAnB;EAIAR,QAAQ,CAACJ,aAAa,CAACC,UAAD,CAAd,CAAR;AACD,CARM,C,CAUP;AAEA;AAEA"},"metadata":{},"sourceType":"module"}