{"ast":null,"code":"// // Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n// import { ACT_CURRENCIES } from '../actions';\n// const INITIAL_STATE = {\n//   currencies: [],\n//   entry: false,\n// };\n// const wallet = (state = INITIAL_STATE, action) => {\n//   switch (action.type) {\n//   case ACT_CURRENCIES:\n//     return {\n//       ...state,\n//       currencies: action.payload,\n//     };\n//   default:\n//     return state;\n//   }\n// };\n// export default wallet;\nimport { SUCCESS, REQUEST, ERROR } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  loading: false\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case SUCCESS:\n      return { ...state,\n        currencies: action.payload,\n        loading: false\n      };\n\n    case ERROR:\n      return {\n        state,\n        loading: false,\n        error: action.payload.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"names":["SUCCESS","REQUEST","ERROR","INITIAL_STATE","currencies","loading","wallet","state","action","type","payload","error"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["// // Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n// import { ACT_CURRENCIES } from '../actions';\n\n// const INITIAL_STATE = {\n//   currencies: [],\n//   entry: false,\n// };\n\n// const wallet = (state = INITIAL_STATE, action) => {\n//   switch (action.type) {\n//   case ACT_CURRENCIES:\n//     return {\n//       ...state,\n//       currencies: action.payload,\n//     };\n//   default:\n//     return state;\n//   }\n// };\n\n// export default wallet;\nimport { SUCCESS, REQUEST, ERROR } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  loading: false,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST:\n    return {\n      ...state,\n      loading: true,\n    };\n  case SUCCESS:\n    return {\n      ...state,\n      currencies: action.payload,\n      loading: false,\n    };\n  case ERROR:\n    return {\n      state,\n      loading: false,\n      error: action.payload.error,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,OAAT,EAAkBC,OAAlB,EAA2BC,KAA3B,QAAwC,YAAxC;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,OAAO,EAAE;AAFW,CAAtB;;AAKA,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BJ,aAA0B;EAAA,IAAXK,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKR,OAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELF,OAAO,EAAE;MAFJ,CAAP;;IAIF,KAAKL,OAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELH,UAAU,EAAEI,MAAM,CAACE,OAFd;QAGLL,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKH,KAAL;MACE,OAAO;QACLK,KADK;QAELF,OAAO,EAAE,KAFJ;QAGLM,KAAK,EAAEH,MAAM,CAACE,OAAP,CAAeC;MAHjB,CAAP;;IAKF;MACE,OAAOJ,KAAP;EAnBF;AAqBD,CAtBD;;AAwBA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}