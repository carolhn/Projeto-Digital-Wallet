{"ast":null,"code":"export const ACT_EMAIL = 'ACT_EMAIL'; // export const ACT_CURRENCIES = 'ACT_CURRENCIES';\n\nexport const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\nexport const actEmail = payload => ({\n  type: ACT_EMAIL,\n  payload\n}); // export const actCurrencies = (payload) => ({\n//  type: ACT_CURRENCIES, payload });\n// export const fetchApi = () => async (dispatch) => {\n//   const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//   const result = await response.json();\n//   delete result.USDT;\n//   const obj = Object.keys(result);\n//   dispatch(actCurrencies(obj));\n// };\n\nexport const request = () => ({\n  type: REQUEST\n});\nexport const success = payload => ({\n  type: SUCCESS,\n  payload\n});\nexport const actionError = payload => ({\n  type: ERROR,\n  payload\n}); // export const fetchApi = () => async (dispatch) => {\n//   dispatch(request);\n//   try {\n//     const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//     const data = await response.json();\n//     const dataResult = Object.keys(data).filter((e) => e !== 'USDT');\n//     dispatch(success(dataResult));\n//   } catch (error) {\n//     dispatch(actionError(error));\n//   }\n// };\n// export function fetchApi() {\n//   return async (dispatch) => {\n//     const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//     const result = await response.json();\n//     const resultado = Object.keys(result).filter((e) => e !== 'USDT');\n//     return dispatch(actCurrencies(resultado));\n//   };\n// }\n//\n//\n//\n//\n//\n//\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer","map":{"version":3,"names":["ACT_EMAIL","REQUEST","SUCCESS","ERROR","actEmail","payload","type","request","success","actionError"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["export const ACT_EMAIL = 'ACT_EMAIL';\n// export const ACT_CURRENCIES = 'ACT_CURRENCIES';\nexport const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\n\nexport const actEmail = (payload) => ({ type: ACT_EMAIL, payload });\n\n// export const actCurrencies = (payload) => ({\n//  type: ACT_CURRENCIES, payload });\n\n// export const fetchApi = () => async (dispatch) => {\n//   const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//   const result = await response.json();\n//   delete result.USDT;\n//   const obj = Object.keys(result);\n//   dispatch(actCurrencies(obj));\n// };\n\nexport const request = () => ({\n  type: REQUEST,\n});\n\nexport const success = (payload) => ({\n  type: SUCCESS,\n  payload,\n});\n\nexport const actionError = (payload) => ({\n  type: ERROR,\n  payload,\n});\n\n// export const fetchApi = () => async (dispatch) => {\n//   dispatch(request);\n//   try {\n//     const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//     const data = await response.json();\n//     const dataResult = Object.keys(data).filter((e) => e !== 'USDT');\n//     dispatch(success(dataResult));\n//   } catch (error) {\n//     dispatch(actionError(error));\n//   }\n// };\n\n// export function fetchApi() {\n//   return async (dispatch) => {\n//     const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n//     const result = await response.json();\n//     const resultado = Object.keys(result).filter((e) => e !== 'USDT');\n//     return dispatch(actCurrencies(resultado));\n//   };\n// }\n\n//\n//\n//\n//\n//\n//\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,WAAlB,C,CACP;;AACA,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AAEP,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;EAAEC,IAAI,EAAEN,SAAR;EAAmBK;AAAnB,CAAd,CAAjB,C,CAEP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,OAAO,GAAG,OAAO;EAC5BD,IAAI,EAAEL;AADsB,CAAP,CAAhB;AAIP,OAAO,MAAMO,OAAO,GAAIH,OAAD,KAAc;EACnCC,IAAI,EAAEJ,OAD6B;EAEnCG;AAFmC,CAAd,CAAhB;AAKP,OAAO,MAAMI,WAAW,GAAIJ,OAAD,KAAc;EACvCC,IAAI,EAAEH,KADiC;EAEvCE;AAFuC,CAAd,CAApB,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}