{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { ACT_CURRENCIES } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  entry: false\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ACT_CURRENCIES:\n      return { ...state,\n        currencies: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"names":["ACT_CURRENCIES","INITIAL_STATE","currencies","entry","wallet","state","action","type","payload"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { ACT_CURRENCIES } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  entry: false,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ACT_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,YAA/B;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,KAAK,EAAE;AAFa,CAAtB;;AAKA,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BJ,aAA0B;EAAA,IAAXK,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKP,cAAL;MACE,OAAO,EACL,GAAGK,KADE;QAELH,UAAU,EAAEI,MAAM,CAACE;MAFd,CAAP;;IAIF;MACE,OAAOH,KAAP;EAPF;AASD,CAVD;;AAYA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}