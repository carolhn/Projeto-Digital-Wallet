{"ast":null,"code":"export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\nexport const actEmail = payload => ({\n  type: ACT_EMAIL,\n  payload\n});\nexport const actCurrencies = currencies => ({\n  type: ACTION_CURRENCIES,\n  payload: currencies\n});\nexport const fetchApi = () => async dispatch => {\n  try {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await response.json();\n    delete result.USDT;\n    const array = Object.keys(result);\n    dispatch(actCurrencies(array));\n  } catch (error) {\n    console.log(error);\n  }\n}; // 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer","map":{"version":3,"names":["ACT_EMAIL","ACT_CURRENCIES","actEmail","payload","type","actCurrencies","currencies","ACTION_CURRENCIES","fetchApi","dispatch","response","fetch","result","json","USDT","array","Object","keys","error","console","log"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["export const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\n\nexport const actEmail = (payload) => ({ type: ACT_EMAIL, payload });\n\nexport const actCurrencies = (currencies) => ({\n  type: ACTION_CURRENCIES, payload: currencies });\n\nexport const fetchApi = () => async (dispatch) => {\n  try {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await response.json();\n    delete result.USDT;\n    const array = Object.keys(result);\n    dispatch(actCurrencies(array));\n  } catch (error) {\n    console.log(error);\n  }\n};\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;EAAEC,IAAI,EAAEJ,SAAR;EAAmBG;AAAnB,CAAd,CAAjB;AAEP,OAAO,MAAME,aAAa,GAAIC,UAAD,KAAiB;EAC5CF,IAAI,EAAEG,iBADsC;EACnBJ,OAAO,EAAEG;AADU,CAAjB,CAAtB;AAGP,OAAO,MAAME,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;IACA,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;IACA,OAAOD,MAAM,CAACE,IAAd;IACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAAd;IACAH,QAAQ,CAACJ,aAAa,CAACU,KAAD,CAAd,CAAR;EACD,CAND,CAME,OAAOG,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAVM,C,CAWP;AAEA;AAEA"},"metadata":{},"sourceType":"module"}