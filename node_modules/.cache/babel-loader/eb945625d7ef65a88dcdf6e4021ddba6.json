{"ast":null,"code":"import _objectSpread from\"/home/carol/Projetos/sd-024-b-project-trybewallet/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/home/carol/Projetos/sd-024-b-project-trybewallet/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/carol/Projetos/sd-024-b-project-trybewallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import currency from'../reducers/api';export var ACT_EMAIL='ACT_EMAIL';export var ACT_CURRENCIES='ACT_CURRENCIES';export var ACT_EXPENSE='ACT_EXPENSE';export var EX_DELETE='EX_DELETE';export var actEmail=function actEmail(payload){return{type:ACT_EMAIL,payload:payload};};export var actCurrencies=function actCurrencies(payload){return{type:ACT_CURRENCIES,payload:payload};};export var actExpense=function actExpense(payload){return{type:ACT_EXPENSE,payload:payload};};export var exDelete=function exDelete(deletar){return{type:EX_DELETE,payload:deletar};};export function fetchApi(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var currencys,resultado;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return currency();case 2:currencys=_context.sent;//  const URL = await fetch('https://economia.awesomeapi.com.br/json/all');\n// const retorno = await URL.json();\nresultado=Object.keys(currencys).filter(function(e){return e!=='USDT';});return _context.abrupt(\"return\",dispatch(actCurrencies(resultado)));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();}export var fetchExpense=function fetchExpense(state){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var data,retorno;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('https://economia.awesomeapi.com.br/json/all');case 2:data=_context2.sent;_context2.next=5;return data.json();case 5:retorno=_context2.sent;delete retorno.USDT;dispatch(actExpense(_objectSpread(_objectSpread({},state),{},{exchangeRates:retorno})));case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer","map":{"version":3,"names":["currency","ACT_EMAIL","ACT_CURRENCIES","ACT_EXPENSE","EX_DELETE","actEmail","payload","type","actCurrencies","actExpense","exDelete","deletar","fetchApi","dispatch","currencys","resultado","Object","keys","filter","e","fetchExpense","state","fetch","data","json","retorno","USDT","exchangeRates"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["import currency from '../reducers/api';\n\nexport const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\nexport const ACT_EXPENSE = 'ACT_EXPENSE';\nexport const EX_DELETE = 'EX_DELETE';\n\nexport const actEmail = (payload) => ({ type: ACT_EMAIL, payload });\nexport const actCurrencies = (payload) => ({ type: ACT_CURRENCIES, payload });\nexport const actExpense = (payload) => ({ type: ACT_EXPENSE, payload });\nexport const exDelete = (deletar) => ({ type: EX_DELETE, payload: deletar });\n\nexport function fetchApi() {\n  return async (dispatch) => {\n    const currencys = await currency();\n    //  const URL = await fetch('https://economia.awesomeapi.com.br/json/all');\n    // const retorno = await URL.json();\n    const resultado = Object.keys(currencys).filter((e) => e !== 'USDT');\n    return dispatch(actCurrencies(resultado));\n  };\n}\n\nexport const fetchExpense = (state) => async (dispatch) => {\n  const data = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const retorno = await data.json();\n  delete retorno.USDT;\n  dispatch(actExpense({ ...state, exchangeRates: retorno }));\n};\n\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer\n"],"mappings":"oaAAA,MAAOA,SAAP,KAAqB,iBAArB,CAEA,MAAO,IAAMC,UAAS,CAAG,WAAlB,CACP,MAAO,IAAMC,eAAc,CAAG,gBAAvB,CACP,MAAO,IAAMC,YAAW,CAAG,aAApB,CACP,MAAO,IAAMC,UAAS,CAAG,WAAlB,CAEP,MAAO,IAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,OAAD,QAAc,CAAEC,IAAI,CAAEN,SAAR,CAAmBK,OAAO,CAAPA,OAAnB,CAAd,EAAjB,CACP,MAAO,IAAME,cAAa,CAAG,QAAhBA,cAAgB,CAACF,OAAD,QAAc,CAAEC,IAAI,CAAEL,cAAR,CAAwBI,OAAO,CAAPA,OAAxB,CAAd,EAAtB,CACP,MAAO,IAAMG,WAAU,CAAG,QAAbA,WAAa,CAACH,OAAD,QAAc,CAAEC,IAAI,CAAEJ,WAAR,CAAqBG,OAAO,CAAPA,OAArB,CAAd,EAAnB,CACP,MAAO,IAAMI,SAAQ,CAAG,QAAXA,SAAW,CAACC,OAAD,QAAc,CAAEJ,IAAI,CAAEH,SAAR,CAAmBE,OAAO,CAAEK,OAA5B,CAAd,EAAjB,CAEP,MAAO,SAASC,SAAT,EAAoB,CACzB,iGAAO,iBAAOC,QAAP,kKACmBb,SAAQ,EAD3B,QACCc,SADD,eAEL;AACA;AACMC,SAJD,CAIaC,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuBI,MAAvB,CAA8B,SAACC,CAAD,QAAOA,EAAC,GAAK,MAAb,EAA9B,CAJb,iCAKEN,QAAQ,CAACL,aAAa,CAACO,SAAD,CAAd,CALV,wDAAP,+DAOD,CAED,MAAO,IAAMK,aAAY,CAAG,QAAfA,aAAe,CAACC,KAAD,oGAAW,kBAAOR,QAAP,gKAClBS,MAAK,CAAC,6CAAD,CADa,QAC/BC,IAD+B,uCAEfA,KAAI,CAACC,IAAL,EAFe,QAE/BC,OAF+B,gBAGrC,MAAOA,QAAO,CAACC,IAAf,CACAb,QAAQ,CAACJ,UAAU,gCAAMY,KAAN,MAAaM,aAAa,CAAEF,OAA5B,GAAX,CAAR,CAJqC,wDAAX,kEAArB,CAOP;AAEA;AAEA"},"metadata":{},"sourceType":"module"}