{"ast":null,"code":"import currency from '../reducers/api';\nexport const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\nexport const ACT_EXPENSE = 'ACT_EXPENSE';\nexport const actEmail = payload => ({\n  type: ACT_EMAIL,\n  payload\n});\nexport const actCurrencies = payload => ({\n  type: ACT_CURRENCIES,\n  payload\n});\nexport const actExpenses = payload => ({\n  type: ACT_EXPENSE,\n  payload\n});\nexport function fetchApi() {\n  return async dispatch => {\n    const URL = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await URL.json();\n    const resultado = Object.keys(result).filter(e => e !== 'USDT');\n    return dispatch(actCurrencies(resultado));\n  };\n}\nexport default {\n  fetchApi\n}; // 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer","map":{"version":3,"names":["currency","ACT_EMAIL","ACT_CURRENCIES","ACT_EXPENSE","actEmail","payload","type","actCurrencies","actExpenses","fetchApi","dispatch","URL","fetch","result","json","resultado","Object","keys","filter","e"],"sources":["/home/carol/Projetos/sd-024-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["import currency from '../reducers/api';\n\nexport const ACT_EMAIL = 'ACT_EMAIL';\nexport const ACT_CURRENCIES = 'ACT_CURRENCIES';\nexport const ACT_EXPENSE = 'ACT_EXPENSE';\n\nexport const actEmail = (payload) => ({ type: ACT_EMAIL, payload });\nexport const actCurrencies = (payload) => ({ type: ACT_CURRENCIES, payload });\nexport const actExpenses = (payload) => ({ type: ACT_EXPENSE, payload });\n\nexport function fetchApi() {\n  return async (dispatch) => {\n    const URL = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await URL.json();\n    const resultado = Object.keys(result)\n      .filter((e) => e !== 'USDT');\n    return dispatch(actCurrencies(resultado));\n  };\n}\n\nexport default { fetchApi };\n\n// 1° - vamos criar uma action( com minha payload ); // vamos carregar meu caminhãozinho com um objeto\n\n// 2° - chamo no component(dispatch (minha função(state que quero levar para reducer)); // vou carregar meu caminhãozinho (dispech) com o que eu preciso levar para reducer\n\n// 3° - No reducer eu recebo o state do componnete // o caminhão tras as informações para eu atualizar na no reducer\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iBAArB;AAEA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;EAAEC,IAAI,EAAEL,SAAR;EAAmBI;AAAnB,CAAd,CAAjB;AACP,OAAO,MAAME,aAAa,GAAIF,OAAD,KAAc;EAAEC,IAAI,EAAEJ,cAAR;EAAwBG;AAAxB,CAAd,CAAtB;AACP,OAAO,MAAMG,WAAW,GAAIH,OAAD,KAAc;EAAEC,IAAI,EAAEH,WAAR;EAAqBE;AAArB,CAAd,CAApB;AAEP,OAAO,SAASI,QAAT,GAAoB;EACzB,OAAO,MAAOC,QAAP,IAAoB;IACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAAvB;IACA,MAAMC,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAArB;IACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EACfK,MADe,CACPC,CAAD,IAAOA,CAAC,KAAK,MADL,CAAlB;IAEA,OAAOT,QAAQ,CAACH,aAAa,CAACQ,SAAD,CAAd,CAAf;EACD,CAND;AAOD;AAED,eAAe;EAAEN;AAAF,CAAf,C,CAEA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}